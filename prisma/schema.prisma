generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model chichi {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model employee {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  position   String   @db.VarChar(255)
  salary     Int
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  price       Int
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
}

model restaurant {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  location   String   @db.VarChar(255)
  capacity   Int
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model table_reservation {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  table_number     Int
  reservation_date DateTime @db.Timestamp(6)
  user_id          String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  user             user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String              @unique @db.VarChar(255)
  firstName         String?             @db.VarChar(255)
  lastName          String?             @db.VarChar(255)
  roq_user_id       String              @db.VarChar(255)
  tenant_id         String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  chichi            chichi[]
  employee          employee[]
  restaurant        restaurant[]
  table_reservation table_reservation[]
}
